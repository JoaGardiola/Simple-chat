type User {
  id: ID!
  firstName: String!
  lastName: String!
  username: String!
}

type AuthenticationResult {
  user: User
  jwt: String
}

input signInInput {
  username: String!
  password: String!
}

extend type Query{
  users: [User!]!
  user(id: ID!): User
}

input UserInput {
  firstName: String!
  lastName: String!
  username: String!
  password: String!
}

extend type Mutation{
  createUser(input: UserInput): User!
  deleteUser(id:ID!): Int! 
  getUserByUsername(username: String!): User!
  signUp(input: UserInput!): AuthenticationResult!
  signIn(input: signInInput!): AuthenticationResult!
}
